name: CI/CD Pipeline

on:
  push:
    branches:
      - prod

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.23'
      

      - name: Build
        run: |
          cd simple-go-web-server
          go build -o go-app .

      - name: Build Docker image
        run: |
          cd simple-go-web-server
          docker build -t ${{ secrets.DOCKER_USERNAME }}/go-docker-image:latest .

      - name: Login to Docker Hub
        run: 
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
        
      - name: Push Docker image
        run: 
          docker push ${{ secrets.DOCKER_USERNAME }}/go-docker-image:latest

      - name: Set up Helm
        run: |
          curl -fsSL https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3.sh | bash

      - name: Configure kubectl
        run: |
          echo "${{ secrets.KUBE_CONFIG }}" > kubeconfig
          export KUBECONFIG=$(pwd)/kubeconfi    

      - name: Set up Kubernetes Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --name go-eks-8nSuuRIT --region us-east-1

      - name: Deploy to Kubernetes with Helm
        run: |
          helm upgrade --install go-release ./helm-chart \
          --set image.repository=${{ secrets.DOCKER_USERNAME }}/go-docker-image \
          --set image.tag=latest \
          --namespace go-namespace \
          --create-namespace
      
      # - name: Get Service Information
      #   run: |
      #     sleep 30
      #     kubectl get services go-release --namespace go-namespace -o jsonpath='{.status.loadBalancer.ingress[0].ip}' > external_ip.txt
      #     echo "External IP: $(cat external_ip.txt)"
      #     echo "Access your application at: http://$(cat external_ip.txt)"